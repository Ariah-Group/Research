<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
      
    <bean id="documentService" class="org.ariahgroup.research.service.impl.DocumentServiceImpl">
        <property name="documentDao">
            <ref bean="documentDao"/>
        </property>
        <property name="dateTimeService">
            <ref bean="dateTimeService"/>
        </property>
        <property name="workflowDocumentService">
            <ref bean="workflowDocumentService"/>
        </property>
        <property name="documentHeaderService">
            <ref bean="documentHeaderService"/>
        </property>
        <property name="businessObjectService">
            <ref bean="businessObjectService"/>
        </property>
        <property name="noteService">
            <ref bean="noteService"/>
        </property>
        <property name="dataDictionaryService">
            <ref bean="dataDictionaryService"/>
        </property>
        <property name="kualiConfigurationService">
            <ref bean="kualiConfigurationService"/>
        </property>
    </bean>      
    
    <bean id="dictionaryValidationService" class="org.kuali.rice.krad.service.impl.DictionaryValidationServiceImpl">
        <property name="dataDictionaryService">
            <ref bean="dataDictionaryService"/>
        </property>
        <property name="businessObjectService">
            <ref bean="businessObjectService"/>
        </property>
        <property name="documentDictionaryService">
            <ref bean="documentDictionaryService"/>
        </property>
        <property name="persistenceService">
            <ref bean="persistenceService"/>
        </property>
        <property name="persistenceStructureService">
            <ref bean="persistenceStructureService"/>
        </property>
        <!-- Collection constraint processors are classes that determine if a feature of a collection of objects satisfies some constraint -->
        <property name="collectionConstraintProcessors">
            <list>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.CollectionSizeConstraintProcessor"/>
            </list>
        </property>
        <!-- Element constraint processors are classes that determine if a passed value is valid for a specific constraint at the individual object or object attribute level
        The order matters here because case adds additional constraints to the queue for other processors to pick up-->
        <property name="elementConstraintProcessors">
            <list>
                <bean class="org.ariahgroup.research.datadictionary.validation.processor.WordCountConstraintProcessor"
            parent="mandatoryElementConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.CaseConstraintProcessor"
              parent="mandatoryElementConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.SimpleConstraintProcessor"
              parent="mandatoryElementConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.ExistenceConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.DataTypeConstraintProcessor"
              parent="mandatoryElementConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.RangeConstraintProcessor"
              parent="mandatoryElementConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.LengthConstraintProcessor"
              parent="mandatoryElementConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.ValidCharactersConstraintProcessor"
              parent="mandatoryElementConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.PrerequisiteConstraintProcessor"
              parent="mandatoryElementConstraintProcessor"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.processor.MustOccurConstraintProcessor"
              parent="mandatoryElementConstraintProcessor"/>
            </list>
        </property>
        <!-- Constraint providers are classes that map specific constraint types to a constraint resolver, which takes a constrainable definition -->
        <property name="constraintProviders">
            <list>
                <bean class="org.kuali.rice.krad.datadictionary.validation.constraint.provider.AttributeDefinitionConstraintProvider">
                    <!--
                        individual constraint resolvers can be injected as a map keyed by constraint type as string, or the default
                        resolvers can be instantiated into the map by adding 'init-method="init"' to the bean declaration above
                    -->
                    <property name="resolverMap">
                        <map>
                            <entry key="org.kuali.rice.krad.datadictionary.validation.constraint.SimpleConstraint">
                                <ref bean="dictionaryValidationSimpleConstraintResolver"/>
                            </entry>
                            <entry key="org.kuali.rice.krad.datadictionary.validation.constraint.CaseConstraint">
                                <ref bean="dictionaryValidationCaseConstraintResolver"/>
                            </entry>
                            <entry key="org.kuali.rice.krad.datadictionary.validation.constraint.ValidCharactersConstraint">
                                <ref bean="dictionaryValidationValidCharactersConstraintResolver"/>
                            </entry>
                            <entry key="org.kuali.rice.krad.datadictionary.validation.constraint.PrerequisiteConstraint">
                                <ref bean="dictionaryValidationPrerequisiteConstraintsResolver"/>
                            </entry>
                            <entry key="org.kuali.rice.krad.datadictionary.validation.constraint.MustOccurConstraint">
                                <ref bean="dictionaryValidationMustOccurConstraintsResolver"/>
                            </entry>
                            <entry key="org.kuali.rice.krad.datadictionary.validation.constraint.CollectionSizeConstraint">
                                <ref bean="dictionaryValidationDefinitionConstraintResolver"/>
                            </entry>
                            <entry key="org.ariahgroup.research.datadictionary.validation.constraint.WordCountConstraint">
                                <bean class="org.ariahgroup.research.datadictionary.validation.constraint.resolver.WordCountConstraintResolver"/>
                            </entry>
                        </map>
                    </property>
                </bean>
                <bean class="org.kuali.rice.krad.datadictionary.validation.constraint.provider.ComplexAttributeDefinitionConstraintProvider"/>
                <bean class="org.kuali.rice.krad.datadictionary.validation.constraint.provider.DataObjectEntryConstraintProvider">
                    <!--
                        individual constraint resolvers can be injected as a map keyed by constraint type as string, or the default
                        resolvers can be instantiated into the map by adding 'init-method="init"' to the bean declaration above
                    -->
                    <property name="resolverMap">
                        <map>
                            <entry key="org.kuali.rice.krad.datadictionary.validation.constraint.MustOccurConstraint">
                                <ref bean="dictionaryValidationMustOccurConstraintsResolver"/>
                            </entry>
                        </map>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
  
    <bean id="dataDictionaryService" class="org.ariahgroup.research.service.impl.DataDictionaryServiceImpl" scope="singleton">
        <property name="kualiConfigurationService" ref="kualiConfigurationService"/>
        <property name="kualiModuleService" ref="kualiModuleService"/>
    </bean>
</beans>